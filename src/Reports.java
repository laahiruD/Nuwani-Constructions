
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.CMYKColor;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.text.ParseException;
import java.text.SimpleDateFormat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author lahiru
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jDateChooser5 = new com.toedter.calendar.JDateChooser();
        jDateChooser6 = new com.toedter.calendar.JDateChooser();
        jButton5 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jDateChooser7 = new com.toedter.calendar.JDateChooser();
        jDateChooser8 = new com.toedter.calendar.JDateChooser();
        jButton6 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jDateChooser9 = new com.toedter.calendar.JDateChooser();
        jDateChooser10 = new com.toedter.calendar.JDateChooser();
        jButton15 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable8 = new javax.swing.JTable();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(845, 593));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(0, 51, 102));
        jPanel5.setLayout(null);

        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel13.setLayout(null);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Select Time Period");
        jPanel13.add(jLabel15);
        jLabel15.setBounds(10, 10, 140, 24);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("From");
        jPanel13.add(jLabel17);
        jLabel17.setBounds(10, 40, 44, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("To");
        jPanel13.add(jLabel16);
        jLabel16.setBounds(260, 40, 21, 30);
        jPanel13.add(jDateChooser1);
        jDateChooser1.setBounds(60, 40, 160, 30);
        jPanel13.add(jDateChooser2);
        jDateChooser2.setBounds(290, 40, 160, 30);

        jButton3.setText("Get Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton3);
        jButton3.setBounds(600, 30, 130, 40);

        jPanel5.add(jPanel13);
        jPanel13.setBounds(10, 10, 820, 100);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel5.add(jScrollPane1);
        jScrollPane1.setBounds(60, 150, 750, 130);

        jButton7.setText("Report");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7);
        jButton7.setBounds(710, 470, 100, 50);

        jButton8.setText("Clear");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton8);
        jButton8.setBounds(590, 470, 90, 50);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel5.add(jScrollPane3);
        jScrollPane3.setBounds(200, 300, 452, 140);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(0, 0, 840, 565);

        jTabbedPane1.addTab("Breakdowns at each site", jPanel1);

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));
        jPanel2.setLayout(null);

        jPanel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel14.setLayout(null);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Select Time Period");
        jPanel14.add(jLabel18);
        jLabel18.setBounds(10, 10, 140, 24);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("From");
        jPanel14.add(jLabel19);
        jLabel19.setBounds(10, 40, 44, 30);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("To");
        jPanel14.add(jLabel20);
        jLabel20.setBounds(260, 40, 21, 30);
        jPanel14.add(jDateChooser3);
        jDateChooser3.setBounds(60, 40, 160, 30);
        jPanel14.add(jDateChooser4);
        jDateChooser4.setBounds(290, 40, 160, 30);

        jButton4.setText("Get Details");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton4);
        jButton4.setBounds(600, 30, 130, 40);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel14.add(jPanel7);
        jPanel7.setBounds(420, -30, 100, 100);

        jPanel2.add(jPanel14);
        jPanel14.setBounds(10, 10, 820, 100);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(40, 170, 740, 230);

        jButton9.setText("Clear");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton9);
        jButton9.setBounds(590, 470, 90, 50);

        jButton10.setText("Report");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10);
        jButton10.setBounds(710, 470, 100, 50);

        jTabbedPane1.addTab("Vehicle and machine breakdowns", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));
        jPanel3.setLayout(null);

        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel15.setLayout(null);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Select Time Period");
        jPanel15.add(jLabel21);
        jLabel21.setBounds(10, 10, 140, 24);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("From");
        jPanel15.add(jLabel22);
        jLabel22.setBounds(10, 40, 44, 30);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setText("To");
        jPanel15.add(jLabel23);
        jLabel23.setBounds(260, 40, 21, 30);
        jPanel15.add(jDateChooser5);
        jDateChooser5.setBounds(60, 40, 160, 30);
        jPanel15.add(jDateChooser6);
        jDateChooser6.setBounds(290, 40, 160, 30);

        jButton5.setText("Get Details");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton5);
        jButton5.setBounds(600, 30, 130, 40);

        jPanel3.add(jPanel15);
        jPanel15.setBounds(10, 10, 820, 100);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jPanel3.add(jScrollPane4);
        jScrollPane4.setBounds(60, 150, 750, 140);

        jButton11.setText("Clear");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton11);
        jButton11.setBounds(590, 470, 90, 50);

        jButton12.setText("Report");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton12);
        jButton12.setBounds(710, 470, 100, 50);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(jTable5);

        jPanel3.add(jScrollPane5);
        jScrollPane5.setBounds(170, 320, 452, 140);

        jTabbedPane1.addTab("Hirings", jPanel3);

        jPanel6.setBackground(new java.awt.Color(0, 51, 102));
        jPanel6.setLayout(null);

        jPanel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel16.setLayout(null);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("Select Time Period");
        jPanel16.add(jLabel24);
        jLabel24.setBounds(10, 10, 140, 24);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("From");
        jPanel16.add(jLabel25);
        jLabel25.setBounds(10, 40, 44, 30);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setText("To");
        jPanel16.add(jLabel26);
        jLabel26.setBounds(260, 40, 21, 30);
        jPanel16.add(jDateChooser7);
        jDateChooser7.setBounds(60, 40, 160, 30);
        jPanel16.add(jDateChooser8);
        jDateChooser8.setBounds(290, 40, 160, 30);

        jButton6.setText("Get Details");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton6);
        jButton6.setBounds(600, 30, 130, 40);

        jPanel6.add(jPanel16);
        jPanel16.setBounds(10, 10, 820, 100);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable6);

        jPanel6.add(jScrollPane6);
        jScrollPane6.setBounds(160, 140, 620, 160);

        jButton13.setText("Report");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton13);
        jButton13.setBounds(680, 490, 100, 30);

        jButton14.setText("Clear");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton14);
        jButton14.setBounds(570, 490, 90, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Newly started Sites :");
        jPanel6.add(jLabel1);
        jLabel1.setBounds(20, 160, 120, 20);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Completed Site :");
        jPanel6.add(jLabel2);
        jLabel2.setBounds(20, 340, 100, 20);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(jTable7);

        jPanel6.add(jScrollPane7);
        jScrollPane7.setBounds(160, 320, 620, 150);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 840, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 565, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("New and completed sites", jPanel4);

        jPanel8.setBackground(new java.awt.Color(0, 51, 102));
        jPanel8.setLayout(null);

        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel17.setLayout(null);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setText("Select Time Period");
        jPanel17.add(jLabel27);
        jLabel27.setBounds(10, 10, 140, 24);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("From");
        jPanel17.add(jLabel28);
        jLabel28.setBounds(10, 40, 44, 30);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("To");
        jPanel17.add(jLabel29);
        jLabel29.setBounds(260, 40, 21, 30);
        jPanel17.add(jDateChooser9);
        jDateChooser9.setBounds(60, 40, 160, 30);
        jPanel17.add(jDateChooser10);
        jDateChooser10.setBounds(290, 40, 160, 30);

        jButton15.setText("Get Details");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton15);
        jButton15.setBounds(600, 30, 130, 40);

        jPanel8.add(jPanel17);
        jPanel17.setBounds(10, 10, 820, 100);

        jTable8.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Breakdown ID", "Broken Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(jTable8);
        if (jTable8.getColumnModel().getColumnCount() > 0) {
            jTable8.getColumnModel().getColumn(0).setResizable(false);
            jTable8.getColumnModel().getColumn(1).setResizable(false);
            jTable8.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel8.add(jScrollPane8);
        jScrollPane8.setBounds(80, 150, 700, 290);

        jButton16.setText("Report");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton16);
        jButton16.setBounds(710, 470, 100, 50);

        jButton17.setText("Clear");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton17);
        jButton17.setBounds(590, 470, 90, 50);

        jTabbedPane1.addTab("Repaird Status", jPanel8);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 845, 593);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dteto = sdf.format(jDateChooser2.getDate());
            String dtefrom = sdf.format(jDateChooser1.getDate());

            PreparedStatement ps = null;
            ResultSet rs = null;
            //DefaultTableModel vw = (DefaultTableModel) jTable1.getModel();

            String query1 = "SELECT DISTINCT(Site_ID),COUNT(Site_ID) AS Count FROM breakdowns GROUP BY Site_ID ";
            ps = databaseConnection.con().prepareStatement(query1);
            rs = ps.executeQuery();
            jTable3.setModel(DbUtils.resultSetToTableModel(rs));

            //
            try {
                String query = "SELECT breakdowns.Site_ID,site.Name,breakdowns.VID,breakdowns.Date FROM `breakdowns` LEFT JOIN site ON breakdowns.Site_ID=site.Site_ID WHERE `Date` BETWEEN '" + dtefrom + "' AND '" + dteto + "' ORDER BY  Site_ID";
                ps = databaseConnection.con().prepareStatement(query);
                rs = ps.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }

            //            int k=0;
            //            for(int i=0;i<jTable1.getRowCount();i++){
            //                if(jTable1.getModel().getValueAt(i, 1).toString().equals("M001")){
            //                    k++;
            //                }
            //            }
            //            System.out.println(k);
            //            double total = 0.0;
            //            for (int i = 0; i < jTable1.getRowCount(); i++) {
            //                total = total + Double.valueOf(jTable1.getModel().getValueAt(i,6).toString());
            //            }
            // jTextField1.setText(String.valueOf(total));
            //            try {
            //                SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
            //                String dteto1=sdf1.format(jDateChooser2.getDate());
            //                String dtefrom1=sdf1.format(jDateChooser1.getDate());
            //
            //                String query2 = "SELECT  `ItemName`, `Supplier`, `UnitPrice`, `SellingPrice`, SUM(`Quantity`) AS `Quantity`, `Price`  FROM `stock` WHERE `Date` BETWEEN '" + dtefrom1 + "' AND '" + dteto1 + "' GROUP BY ItemName ";
            //                ps = DBConnection.con().prepareStatement(query2);
            //                rs = ps.executeQuery();
            //                //double a=Double.valueOf(rs.getString("UnitPrice"))*Double.valueOf(rs.getString("Quantity"));,String.valueOf(a)
            //                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            //                //vw.addRow(new Object[]{ rs.getString("ItemName"),  rs.getString("UnitPrice"), rs.getString("Quantity")});
            //
            //                double total = 0.0;
            //                for (int i = 0; i < jTable1.getRowCount(); i++) {
            //                    total = total + Double.valueOf(jTable1.getModel().getValueAt(i,5).toString());
            //                }
            //                jTextField1.setText(String.valueOf(total));
            //            } catch (SQLException ex) {
            //                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            //            }
        } catch (SQLException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }

        //            int k=0;
        //            for(int i=0;i<jTable1.getRowCount();i++){
        //                if(jTable1.getModel().getValueAt(i, 1).toString().equals("M001")){
        //                    k++;
        //                }
        //            }
        //            System.out.println(k);
        //            double total = 0.0;
        //            for (int i = 0; i < jTable1.getRowCount(); i++) {
        //                total = total + Double.valueOf(jTable1.getModel().getValueAt(i,6).toString());
        //            }
        // jTextField1.setText(String.valueOf(total));
        //            try {
        //                SimpleDateFormat sdf1= new SimpleDateFormat("yyyy-MM-dd");
        //                String dteto1=sdf1.format(jDateChooser2.getDate());
        //                String dtefrom1=sdf1.format(jDateChooser1.getDate());
        //
        //                String query2 = "SELECT  `ItemName`, `Supplier`, `UnitPrice`, `SellingPrice`, SUM(`Quantity`) AS `Quantity`, `Price`  FROM `stock` WHERE `Date` BETWEEN '" + dtefrom1 + "' AND '" + dteto1 + "' GROUP BY ItemName ";
        //                ps = DBConnection.con().prepareStatement(query2);
        //                rs = ps.executeQuery();
        //                //double a=Double.valueOf(rs.getString("UnitPrice"))*Double.valueOf(rs.getString("Quantity"));,String.valueOf(a)
        //                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        //                //vw.addRow(new Object[]{ rs.getString("ItemName"),  rs.getString("UnitPrice"), rs.getString("Quantity")});
        //
        //                double total = 0.0;
        //                for (int i = 0; i < jTable1.getRowCount(); i++) {
        //                    total = total + Double.valueOf(jTable1.getModel().getValueAt(i,5).toString());
        //                }
        //                jTextField1.setText(String.valueOf(total));
        //            } catch (SQLException ex) {
        //                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        //            }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String path = "C:\\Users\\DELL\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel vw4 = (DefaultTableModel) jTable3.getModel();

        String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String dteto1 = sdf1.format(jDateChooser2.getDate());
        String dtefrom1 = sdf1.format(jDateChooser1.getDate());

        if (vw3.getRowCount() > 0) {
            String adf = new SimpleDateFormat("yyyy-MM-dd ").format(new Date());
            Document document = new Document(PageSize.A4, 50, 50, 50, 50) {
            };
            try {
                PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "Breakdown_Of_Sites " + dte + ".pdf"));
                document.open();
                write.setPageEvent(new MyPdfPageEventHelper("nuwani.png"));

                // Writing line by line
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                       \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("Date : " + adf, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("Report about breakdowns at each project site ", FontFactory.getFont(FontFactory.TIMES_ROMAN, 16, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("From :" + dtefrom1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("To :" + dteto1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                       \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));

                // creating  table
                Paragraph ph1 = new Paragraph("Site ID",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                Paragraph ph2 = new Paragraph("Site Name",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                Paragraph ph3 = new Paragraph("VID",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                Paragraph ph4 = new Paragraph("Date",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));

                PdfPTable tb1 = new PdfPTable(4);

                // adding header
                tb1.addCell(ph1);
                tb1.addCell(ph2);
                tb1.addCell(ph3);
                tb1.addCell(ph4);

                //read sys table
                for (int i = 0; i < vw3.getRowCount(); i++) {

                    String tSiteID = vw3.getValueAt(i, 0).toString();
                    String tSiteName = vw3.getValueAt(i, 1).toString();
                    String tVID = vw3.getValueAt(i, 2).toString();
                    String tDate = vw3.getValueAt(i, 3).toString();

                    //store data in pdf table
                    tb1.addCell(tSiteID);
                    tb1.addCell(tSiteName);
                    tb1.addCell(tVID);
                    tb1.addCell(tDate);

                }
                document.add(new Paragraph("\n"));
                document.add(tb1);
                document.add(new Paragraph("\n"));

                //second table
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("        Number of breakdowns at each site                                                                      \n"));
                document.add(new Paragraph("\n"));
                if(jTable3.getRowCount()>0){
                    for(int i=0;i<jTable3.getRowCount();i++){
                        document.add(new Paragraph("                    »"+String.valueOf(jTable3.getValueAt(i, 0))+"  ------> "+ String.valueOf(jTable3.getValueAt(i, 1))));
                        
                    }
                }
               
                document.add(new Paragraph("\n"));
                      
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                document.add(new Paragraph("             -------------------------                                                                       ------------------------\n"));
                document.add(new Paragraph("                    Signature                                                                                         Date\n"));
            document.close();
                JOptionPane.showMessageDialog(this, "printed ");
                

            } catch (DocumentException ex) {
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
           

        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        DefaultTableModel model1 = (DefaultTableModel) jTable3.getModel();
        model1.setRowCount(0);

        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dteto = sdf.format(jDateChooser4.getDate());
            String dtefrom = sdf.format(jDateChooser3.getDate());
            PreparedStatement ps = null;
            ResultSet rs = null;
// LEFT JOIN site ON breakdowns.Site_ID=site.Site_ID WHERE `Date` BETWEEN '" + dtefrom + "' AND '" + dteto + "' ORDER BY  Site_ID";
            String query = "SELECT DISTINCT(VID),COUNT(VID) AS COUNT,vehicles_and_machines.TypeCapacity FROM breakdowns LEFT JOIN vehicles_and_machines ON breakdowns.VID=vehicles_and_machines.ID GROUP BY VID ";
            ps = databaseConnection.con().prepareStatement(query);
            rs = ps.executeQuery();
            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
      DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        

        jDateChooser3.setDate(null);
        jDateChooser4.setDate(null);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
         String path = "C:\\Users\\DELL\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable2.getModel();
        

        String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String dteto1 = sdf1.format(jDateChooser4.getDate());
        String dtefrom1 = sdf1.format(jDateChooser3.getDate());

        if (vw3.getRowCount() > 0) {
            String adf = new SimpleDateFormat("yyyy-MM-dd ").format(new Date());
            Document document = new Document(PageSize.A4, 50, 50, 50, 50) {
            };
            try {
                PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "Breakdown_Of_Vehicles " + dte + ".pdf"));
                document.open();
                write.setPageEvent(new MyPdfPageEventHelper("nuwani.png"));

                // Writing line by line
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                       \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("Date : " + adf, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("Vehicle and machine breakdown count", FontFactory.getFont(FontFactory.TIMES_ROMAN, 16, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("From :" + dtefrom1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("To :" + dteto1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                       \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));

                // creating  table
                Paragraph ph1 = new Paragraph("VID",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                Paragraph ph2 = new Paragraph("Count",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));

                PdfPTable tb1 = new PdfPTable(2);

                // adding header
                tb1.addCell(ph1);
                tb1.addCell(ph2);
                

                //read sys table
                for (int i = 0; i < vw3.getRowCount(); i++) {

                    String tVID= vw3.getValueAt(i, 0).toString();
                    String tCount = vw3.getValueAt(i, 1).toString();
                   

                    //store data in pdf table
                    tb1.addCell(tVID);
                    tb1.addCell(tCount);
                    

                }
                document.add(new Paragraph("\n"));
                document.add(tb1);
                document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                document.add(new Paragraph("             -------------------------                                                                       ------------------------\n"));
                document.add(new Paragraph("                    Signature                                                                                         Date\n"));
                document.close();
                JOptionPane.showMessageDialog(this, "printed ");

            } catch (DocumentException ex) {
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
            

        }

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            try {                                         
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String dteto = sdf.format(jDateChooser6.getDate());
                String dtefrom = sdf.format(jDateChooser5.getDate());
                
                PreparedStatement ps = null;
                ResultSet rs = null;
                //DefaultTableModel vw = (DefaultTableModel) jTable1.getModel();
                
                String query1 = "SELECT HiredBy,TypeCapcity AS Type_and_capacity,HiredFrom FROM hiring2 GROUP BY ID ";
                ps = databaseConnection.con().prepareStatement(query1);
                rs = ps.executeQuery();
                jTable4.setModel(DbUtils.resultSetToTableModel(rs));
                
                 try {
                String query = "SELECT (TypeCapcity) AS Type,COUNT(TypeCapcity) AS Count FROM hiring2 GROUP BY TypeCapcity ";
                ps = databaseConnection.con().prepareStatement(query);
                rs = ps.executeQuery();
                jTable5.setModel(DbUtils.resultSetToTableModel(rs));
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
                 
            } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        model.setRowCount(0);
        DefaultTableModel model1 = (DefaultTableModel) jTable5.getModel();
        model1.setRowCount(0);

        jDateChooser5.setDate(null);
        jDateChooser6.setDate(null);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
       String path = "C:\\Users\\DELL\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable4.getModel();
        

        String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String dteto1 = sdf1.format(jDateChooser6.getDate());
        String dtefrom1 = sdf1.format(jDateChooser5.getDate());

        if (vw3.getRowCount() > 0) {
            String adf = new SimpleDateFormat("yyyy-MM-dd ").format(new Date());
            Document document = new Document(PageSize.A4, 50, 50, 50, 50) {
            };
            try {
                PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "Hirings By each Site " + dte + ".pdf"));
                document.open();
                write.setPageEvent(new MyPdfPageEventHelper("nuwani.png"));

                // Writing line by line
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                       \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("Date : " + adf, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("Report about hired vehicles and machines", FontFactory.getFont(FontFactory.TIMES_ROMAN, 16, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("From :" + dtefrom1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("To :" + dteto1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                       \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));

                // creating  table
                Paragraph ph1 = new Paragraph("Hired By",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                Paragraph ph2 = new Paragraph("Type and capacity",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                 Paragraph ph3 = new Paragraph("Hired From",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));

                PdfPTable tb1 = new PdfPTable(3);

                // adding header
                tb1.addCell(ph1);
                tb1.addCell(ph2);
                tb1.addCell(ph3);
                

                //read sys table
                for (int i = 0; i < vw3.getRowCount(); i++) {

                    String tHiredBy= vw3.getValueAt(i, 0).toString();
                    String tTypeandcapacity = vw3.getValueAt(i, 1).toString();
                    String tHiredFrom = vw3.getValueAt(i, 2).toString();
                   

                    //store data in pdf table
                    tb1.addCell(tHiredBy);
                    tb1.addCell(tTypeandcapacity);
                    tb1.addCell(tHiredFrom );
                }
                
                //second table
               
                document.add(new Paragraph("\n"));
                document.add(tb1);
                document.add(new Paragraph("\n"));
                 document.add(new Paragraph("\n"));
                document.add(new Paragraph("        Type and hiring count                                                                      \n"));
                document.add(new Paragraph("\n"));
                if(jTable5.getRowCount()>0){
                    for(int i=0;i<jTable5.getRowCount();i++){
                        document.add(new Paragraph("                       "+String.valueOf(jTable5.getValueAt(i, 0))+"  ------> "+ String.valueOf(jTable5.getValueAt(i, 1))));
                        
                    }
                }
               document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      
                      
                      document.add(new Paragraph("\n"));
                document.add(new Paragraph("             -------------------------                                                                       ------------------------\n"));
                document.add(new Paragraph("                    Signature                                                                                         Date\n"));
                document.close();
                JOptionPane.showMessageDialog(this, "printed ");

            } catch (DocumentException ex) {
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
            

        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         try {                                         
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String dteto = sdf.format(jDateChooser8.getDate());
                String dtefrom = sdf.format(jDateChooser7.getDate());
                
                PreparedStatement ps = null;
                ResultSet rs = null;
                //DefaultTableModel vw = (DefaultTableModel) jTable1.getModel();
                
                String query1 = "SELECT Site_ID,`Name`, `Location`  FROM  site WHERE Ending_date BETWEEN '" + dtefrom + "' AND '" + dteto + "' AND Status='Completed' ";
                ps = databaseConnection.con().prepareStatement(query1);
                rs = ps.executeQuery();
                jTable7.setModel(DbUtils.resultSetToTableModel(rs));
                
                
                String query2 = "SELECT Site_ID,`Name`, `Location`  FROM  site WHERE Started_date BETWEEN '" + dtefrom + "' AND '" + dteto + "' AND  Site_ID <> 'null'";
                 ps = databaseConnection.con().prepareStatement(query2);
                rs = ps.executeQuery();
                jTable6.setModel(DbUtils.resultSetToTableModel(rs));
                } catch (SQLException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        String path = "C:\\Users\\DELL\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable6.getModel();
        DefaultTableModel vw4 = (DefaultTableModel) jTable7.getModel();
        
        String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String dteto1 = sdf1.format(jDateChooser8.getDate());
        String dtefrom1 = sdf1.format(jDateChooser7.getDate());
        
        if (vw3.getRowCount() > 0) {
            try {
                String adf = new SimpleDateFormat("yyyy-MM-dd ").format(new Date());
                Document document = new Document(PageSize.A4, 50, 50, 50, 50) {
                };
                
                PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "New_and_completed_Sites " + dte + ".pdf"));
                document.open();
                write.setPageEvent(new MyPdfPageEventHelper("nuwani.png"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                       \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("Date : " + adf, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("Report about progress of project sites ", FontFactory.getFont(FontFactory.TIMES_ROMAN, 16, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("From :" + dtefrom1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("To :" + dteto1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                       \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                document.add(new Paragraph("                                                                        \n"));
                
                // creating  table
                document.add(new Paragraph("New Sites:                                                                       \n"));
                Paragraph ph1 = new Paragraph("Site ID",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                Paragraph ph2 = new Paragraph("Site Name",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                Paragraph ph3 = new Paragraph("Location",
                        FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));

                PdfPTable tb1 = new PdfPTable(3);
                tb1.addCell(ph1);
                tb1.addCell(ph2);
                tb1.addCell(ph3);
                for (int i = 0; i < vw3.getRowCount(); i++) {

                    String tSiteID = vw3.getValueAt(i, 0).toString();
                    String tSiteName = vw3.getValueAt(i, 1).toString();
                    String tLocation = vw3.getValueAt(i, 2).toString();
                    

                    //store data in pdf table
                    tb1.addCell(tSiteID);
                    tb1.addCell(tSiteName);
                    tb1.addCell(tLocation);
                }
                document.add(new Paragraph("\n"));
                document.add(tb1);
                document.add(new Paragraph("\n"));
                //second table
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("        Completed Sites                                                                     \n"));
                document.add(new Paragraph("\n"));
                if(vw4.getRowCount()>0){
                    for(int i=0;i<vw4.getRowCount();i++){
                        document.add(new Paragraph("                    »"+String.valueOf(jTable7.getValueAt(i, 0))+"  ------> "+ String.valueOf(jTable7.getValueAt(i, 1))));
                        
                    }
                }
                document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                 document.add(new Paragraph("             -------------------------                                                                       ------------------------\n"));
                 document.add(new Paragraph("                    Signature                                                                                         Date\n"));
                document.close();   
                JOptionPane.showMessageDialog(this, "printed ");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            } catch (DocumentException ex) {
                Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                 
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable6.getModel();
        model.setRowCount(0);
        DefaultTableModel model1 = (DefaultTableModel) jTable7.getModel();
        model1.setRowCount(0);

        jDateChooser7.setDate(null);
        jDateChooser8.setDate(null);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        try {
            PreparedStatement ps= null;
            ResultSet rs= null;
            PreparedStatement ps1= null;
            ResultSet rs1= null;
            String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
            String status=null;
            Date d1 = new SimpleDateFormat("yyyy-MM-dd").parse(dte);
            
            String sql="SELECT `ID`, `Date`,`ReturnedOn` FROM `breakdowns`";
            ps=databaseConnection.con().prepareStatement(sql);
            rs=ps.executeQuery();
            Date d2 = null;
            while(rs.next()){
                String date=rs.getString("ReturnedOn");
                if(date.equals("")){
                    status="not-returned";
                }else{
                 d2 = new SimpleDateFormat("yyyy-MM-dd").parse(date);
                    if(d1.compareTo(d2)>0){
                    status="returned";
                } else {
                    status="not-returned";
                }
                }
                
                
                
            //System.out.println(rs.getString("ID")+rs.getString("Date")+status);
            DefaultTableModel vw = (DefaultTableModel) jTable8.getModel();
            vw.addRow(new Object[]{rs.getString("ID"),rs.getString("Date"),status});
             
               } 
            
            
        } catch (ParseException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
              String path = "C:\\Users\\DELL\\Desktop\\Reports\\";
        DefaultTableModel vw3 = (DefaultTableModel) jTable8.getModel();
        
        String dte = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
        SimpleDateFormat sdf1 = new SimpleDateFormat("yyyy-MM-dd");
        String dteto1 = sdf1.format(jDateChooser10.getDate());
        String dtefrom1 = sdf1.format(jDateChooser9.getDate());

         if (vw3.getRowCount() > 0) {
                  try {
                      String adf = new SimpleDateFormat("yyyy-MM-dd ").format(new Date());
                      Document document = new Document(PageSize.A4, 50, 50, 50, 50) {
                      };
                      
                      PdfWriter write = PdfWriter.getInstance(document, new FileOutputStream(path + "Repaired_Status " + dte + ".pdf"));
                      document.open();
                      write.setPageEvent(new MyPdfPageEventHelper("nuwani.png"));
                      
                      
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("                                                                       \n"));
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("Date : " + adf, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.NORMAL, new CMYKColor(75, 68, 67, 90))));
                      document.add(new Paragraph("Report about vehicle and machine repairs", FontFactory.getFont(FontFactory.TIMES_ROMAN, 16, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                      document.add(new Paragraph("From :" + dtefrom1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                      document.add(new Paragraph("To :" + dteto1, FontFactory.getFont(FontFactory.HELVETICA, 14, Font.BOLD, new CMYKColor(75, 68, 67, 90))));
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("                                                                       \n"));
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("                                                                        \n"));
                      document.add(new Paragraph("                                                                        \n"));
                      
                      
                      // creating  table
                      Paragraph ph1 = new Paragraph("Breakdown ID",
                              FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                      12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                      Paragraph ph2 = new Paragraph("Broken date",
                              FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                      12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                      Paragraph ph3 = new Paragraph("Status",
                              FontFactory.getFont(FontFactory.TIMES_ROMAN,
                                      12, Font.NORMAL, new CMYKColor(75, 68, 67, 90)));
                      
                      PdfPTable tb1 = new PdfPTable(3);
                      
                      // adding header
                      tb1.addCell(ph1);
                      tb1.addCell(ph2);
                      tb1.addCell(ph3);
                      
                      
                      //read sys table
                      for (int i = 0; i < vw3.getRowCount(); i++) {
                          
                          String tBID= vw3.getValueAt(i, 0).toString();
                          String tBDate = vw3.getValueAt(i, 1).toString();
                          String tStatus = vw3.getValueAt(i, 2).toString();
                          
                          
                          //store data in pdf table
                          tb1.addCell(tBID);
                          tb1.addCell(tBDate);
                          tb1.addCell(tStatus);
                          
                          
                      }
                      document.add(new Paragraph("\n"));
                      document.add(tb1);
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      document.add(new Paragraph("\n"));
                      
                      document.add(new Paragraph("             -------------------------                                                                       ------------------------\n"));
                      document.add(new Paragraph("                    Signature                                                                                         Date\n"));
                      document.close();
                      JOptionPane.showMessageDialog(this, "printed ");
                  } catch (FileNotFoundException ex) {
                      Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                  } catch (DocumentException ex) {
                      Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
                  }
         }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
       DefaultTableModel model = (DefaultTableModel) jTable8.getModel();
        model.setRowCount(0);
        

        jDateChooser9.setDate(null);
        jDateChooser10.setDate(null);
    }//GEN-LAST:event_jButton17ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser10;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private com.toedter.calendar.JDateChooser jDateChooser4;
    private com.toedter.calendar.JDateChooser jDateChooser5;
    private com.toedter.calendar.JDateChooser jDateChooser6;
    private com.toedter.calendar.JDateChooser jDateChooser7;
    private com.toedter.calendar.JDateChooser jDateChooser8;
    private com.toedter.calendar.JDateChooser jDateChooser9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTable jTable8;
    // End of variables declaration//GEN-END:variables
}
